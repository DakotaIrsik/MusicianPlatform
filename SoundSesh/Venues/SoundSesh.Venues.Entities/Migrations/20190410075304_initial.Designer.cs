// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using SoundSesh.Venues.Entities.Models;
using System;

namespace SoundSesh.Venues.Entities.Migrations
{
    [DbContext(typeof(StudioContext))]
    [Migration("20190410075304_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoundSesh.Venues.Entities.Models.LookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Description");

                    b.Property<string>("DisplayDesc");

                    b.Property<string>("IsCustom");

                    b.HasKey("Id");

                    b.ToTable("LookUp");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Genres",
                            Description = "Rock",
                            DisplayDesc = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Genres",
                            Description = "Country",
                            DisplayDesc = "Country"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Genres",
                            Description = "R&B",
                            DisplayDesc = "R&B"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Genres",
                            Description = "Electronic",
                            DisplayDesc = "Electronic"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Genres",
                            Description = "Jazz",
                            DisplayDesc = "Jazz"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Genres",
                            Description = "Reggae",
                            DisplayDesc = "Reggae"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Genres",
                            Description = "Rap",
                            DisplayDesc = "Rap"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Genres",
                            Description = "Dubstep",
                            DisplayDesc = "Dubstep"
                        });
                });

            modelBuilder.Entity("SoundSesh.Venues.Entities.Models.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasMaxLength(100);

                    b.Property<string>("Amenities")
                        .HasMaxLength(1000);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("GenreDetails");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("RoomDetails");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("StudioScheduleId");

                    b.Property<string>("TimeZone");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("SoundSesh.Venues.Entities.Models.StudioSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FridayCloseTime");

                    b.Property<bool>("FridayIsOpen");

                    b.Property<DateTime>("FridayOpenTime");

                    b.Property<DateTime>("MondayCloseTime");

                    b.Property<bool>("MondayIsOpen");

                    b.Property<DateTime>("MondayOpenTime");

                    b.Property<DateTime>("SaturdayCloseTime");

                    b.Property<bool>("SaturdayIsOpen");

                    b.Property<DateTime>("SaturdayOpenTime");

                    b.Property<DateTime>("SundayCloseTime");

                    b.Property<bool>("SundayIsOpen");

                    b.Property<DateTime>("SundayOpenTime");

                    b.Property<DateTime>("ThursdayCloseTime");

                    b.Property<bool>("ThursdayIsOpen");

                    b.Property<DateTime>("ThursdayOpenTime");

                    b.Property<DateTime>("TuesdayCloseTime");

                    b.Property<bool>("TuesdayIsOpen");

                    b.Property<DateTime>("TuesdayOpenTime");

                    b.Property<DateTime>("WednesdayCloseTime");

                    b.Property<bool>("WednesdayIsOpen");

                    b.Property<DateTime>("WednesdayOpenTime");

                    b.HasKey("Id");

                    b.ToTable("StudioSchedule");
                });

            modelBuilder.Entity("SoundSesh.Venues.Entities.Models.StudioStaging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasMaxLength(100);

                    b.Property<string>("Amenities")
                        .HasMaxLength(1000);

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("GenreDetails");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("RoomDetails");

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<int>("Step");

                    b.Property<int>("StudioScheduleId");

                    b.Property<string>("TimeZone");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("StudioAccountStaging");
                });

            modelBuilder.Entity("SoundSesh.Venues.Entities.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biography");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("GenreDetails");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
